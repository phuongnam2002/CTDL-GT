//Made By Phuong Nam PROPTIT <3//
#pragma GCC Optimize("O3")
#include<bits/stdc++.h>
#define alphaa "abcdefghijklmnopqrstuvwxyz"
#define ALPHAA "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
#define f(i,a,b) for(int i=a;i<=b;i++)
#define f1(i,n) for(int i=1;i<=n;i++)
#define f0(i,n) for(int i=0;i<n;i++)
#define ff(i,b,a) for(int i=b;i>=a;i--)
#define el cout<<'\n'
#define fi first
#define se second
#define eb emplace_back
#define pk pop_back
#define vi vector<int>
#define vl vector<ll>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(s) s.begin(),s.end()
using namespace std;
typedef long long ll;
const int N=1e6+3;
const int MOD=1e9+7;
template<class X,class Y>
    void minimize(X &x,const Y &y) {
        if (x>y) x=y;
    }
template<class X,class Y>
    void maximize(X &x,const Y &y) {
        if (x<y) x=y;
    }
template<class T>
    T Abs(const T &x) {
        return (x<0?-x:x);
    }
int n,m,a[1005][1005],f[1005][1005];
struct node{int x,y,z;};
void xuly()
{
   memset(f,0,sizeof(f));
   cin>>n>>m;
   f1(i,n)
   {
       f1(j,m) cin>>a[i][j];
   }
   queue<node>q;
   q.push({1,1,0});
   while(q.size())
   {
        node t=q.front();
        q.pop();
        if(t.x==n&&t.y==m) return cout<<t.z<<'\n',void();
        int l1=t.x,r1=t.y+a[t.x][t.y];
        int l2=t.x+a[t.x][t.y],r2=t.y;
        if(l1<=n&&r1<=m&&!f[l1][r1]) q.push({l1,r1,t.z+1}),f[l1][r1]=1;
        if(l2<=n&&r2<=m&&!f[l2][r2]) q.push({l2,r2,t.z+1}),f[l2][r2]=1;
   }
   cout<<-1;el;
}
int main()
{
  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
  int t=1;
  cin>>t;
  while(t--) xuly();
  return 0;
}
//-----YEU CODE HON CRUSH-----//
