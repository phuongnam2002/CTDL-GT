//Made By Phuong Nam PROPTIT <3//
#pragma GCC Optimize("O3")
#include<bits/stdc++.h>
#define alphaa "abcdefghijklmnopqrstuvwxyz"
#define ALPHAA "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
#define f(i,a,b) for(int i=a;i<=b;i++)
#define f1(i,n) for(int i=1;i<=n;i++)
#define f0(i,n) for(int i=0;i<n;i++)
#define ff(i,b,a) for(int i=b;i>=a;i--)
#define el cout<<'\n'
#define fi first
#define se second
#define eb emplace_back
#define pk pop_back
#define vi vector<int>
#define vl vector<ll>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define all(s) s.begin(),s.end()
using namespace std;
typedef long long ll;
const int N=1e6+3;
const int MOD=1e9+7;
template<class X,class Y>
    void minimize(X &x,const Y &y) {
        if (x>y) x=y;
    }
template<class X,class Y>
    void maximize(X &x,const Y &y) {
        if (x<y) x=y;
    }
template<class T>
    T Abs(const T &x) {
        return (x<0?-x:x);
    }
string dau="+-*/^";
typedef long long ll;
bool kt(char c)
{
    for(int i=0;i<dau.length();i++)
        if (dau[i]==c) return 1;
    return 0;
}
int Deg(char c)
{
    switch (c)
    {
        case '^':
            return 50;
        case '*':
        case '/':
            return 100;
        case '+':
        case '-':
            return 200;
        default:
            return 1000;
    }
}
string toPost(string s)
{
    string res="";
    stack<char> st;
    st.push('#');
    for(int i=0;i<s.length();i++)
    {
        if (s[i]=='(')
        {
            st.push(s[i]);
            continue;
        }
        if (s[i]==')')
        {
            while (st.top()!='(')
            {
                res=res+st.top();
                st.pop();
            }
            st.pop();
            continue;
        }
        if (kt(s[i]))
        {
            while (Deg(st.top())<=Deg(s[i]))
            {
                res=res+st.top();
                st.pop();
            }
            st.push(s[i]);
            continue;
        }
        ll so=0;
        bool ok=0;
        while (i<s.length() && s[i]!='(' && s[i]!=')' && (!kt(s[i])))
        {
            ll ss=s[i]-'0';
            i++;
            so=so*10+ss;
            ok=1;
        }
        if (ok) i--;
        res=res+"("+to_string(so)+")";
    }
    while (st.top()!='#')
    {
        res=res+st.top();
        st.pop();
    }
    return res;
}
ll tinh(string s)
{
    stack<ll> st;
    int i = 0;
    while (i < s.length())
    {
        if (s[i] == '(')
        {
            i++;
            ll so = 0;
            while (s[i] != ')')
            {
                so = so*10 + (s[i] -'0');
                i++;
            }
            i++;
            st.push(so);
        }
        else
        {
            ll tmp1=st.top();
            st.pop();
            ll tmp2=st.top();
            st.pop();
            if (s[i]=='+') st.push(tmp2+tmp1);
            if (s[i]=='-') st.push(tmp2-tmp1);
            if (s[i]=='*') st.push(tmp2*tmp1);
            if (s[i]=='/') st.push(tmp2/tmp1);
            i++;
        }
    }
    return st.top();
}
void xuly()
{
    string s;
    cin>>s;
    cout<<tinh(toPost(s))<<endl;
}
int main()
{
  ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
  int t=1;
  cin>>t;
  while(t--) xuly();
  return 0;
}
//-----YEU CODE HON CRUSH-----//
